@import "../helper/variables";
@import "../helper/colors";

#tooltip-container {
  background-color: $color-bg;
  color: $color-font-bright;
  display: none;

  padding: 30px;

  position: absolute;
  width: $match-window-width;
  z-index: 9999;

  &:hover, &:active, &:focus {
    opacity: 1;
  }

  // values replacing out of vars array
  .scaling-values {
    color: inherit;
  }
  // values replacing { eX }
  .effect-e-values {
    color: inherit;
    font-weight: bold;
  }
  // values replacing { fX } when not found within vars Array
  .effect-f-values {
    color: inherit;
    font-weight: bold;
  }

  .spell-values-table {
    margin-bottom: $spacer;
    thead {
      border-bottom: none;
    }
    td {
      font-weight: 300;
      padding-bottom: $spacer/2;
      padding-top: $spacer/2;

      span {
        color: inherit;
      }

      // costType classes set through API response "costType" value
      &.NoCost, &.none, &.Builds1Ferocity, &.Heat {
        & span { display: none; }
        &::after {
          content: ' / ';
        }
      }

      &.NoCostor50Fury {
        & span { display: none; }
        &::after {
          color: $color-ressource-fury;
          content: '0 / 50';
        }
      }

      &[class*="Health"] {
        // TODO: check this with Zac / Mundo
        color: $color-ressource-health;
      }
      &[class*="Mana"] {
        color: $color-ressource-mana;
      }
      &[class*="Energy"] {
        color: $color-ressource-energy;
      }
      // TODO: use "ressource" string provided instead!?
      &[class*="perSecond"] {
        &::after {
          content: ' per second';
          display: inline;
        }
      }
      &[class*="10pMaxHealth"] {
        &::after {
          color: $color-ressource-health;
          content: ', 10% max health';
          display: inline;
        }
      }

    }
    // td
    tr {
      border-bottom: 1px solid $color-lines-muted;
    }
    // tr
  }
  // .spell-values-table
}

// #tooltip-container

#spell-video-container {
  //  width: 348px;
  //  height: 196px;

  #videoPlayer {
    //    not shown until certain there is no error
    //    display: none;
  }
}

.append-spell-key {
  &[data-index-1="1"]::after {
    content: ' (Passive)';
  }
  &[data-index-1="2"]::after {
    content: ' (Q)';
  }
  &[data-index-1="3"]::after {
    content: ' (W)';
  }
  &[data-index-1="4"]::after {
    content: ' (E)';
  }
  &[data-index-1="5"]::after {
    content: ' (R)';
  }
}

.spell-key-icon {
  text-align: center !important;
  &[data-index-1]::after {
    border: 2px solid $color-lines;
    border-radius: 100%;
    -moz-border-radius: 100%;
    -webkit-border-radius: 100%;
    display: inline-block;
    font-size: 25px;
    font-weight: 800;
    height: 40px;
    margin: 0 auto;

    padding-top: 5px;
    width: 40px;
  }
  &[data-index-1="2"]::after {
    content: 'Q';
  }
  &[data-index-1="3"]::after {
    content: 'W';
  }
  &[data-index-1="4"]::after {
    content: 'E';
  }
  &[data-index-1="5"]::after {
    content: 'R';
  }
}